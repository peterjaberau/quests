name: Release

on:
  push:
    tags:
      - v*.*.*
    branches:
      - release/**

jobs:
  release:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    strategy:
      matrix:
        os: ${{ startsWith(github.ref, 'refs/heads/release/') && fromJSON('["ubuntu-latest", "windows-latest", "macos-latest"]') || fromJSON('["macos-latest"]') }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          # A fine-grained GitHub personal access token is required to checkout submodules
          # https://github.com/actions/checkout/issues/287
          # Permissions required:
          # - Repository access to quests-org/quests & quests-org/registry
          # - Read access to "Contents" and "Metadata"
          # - Read/Write access to actions and workflows
          token: ${{ secrets.CHECKOUT_ACCESS_TOKEN }}
      - uses: ./.github/actions/setup-ripgrep-cache
      - uses: ./.github/actions/prepare
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - if: matrix.os == 'ubuntu-latest'
        name: build-linux
        run: pnpm turbo build:linux --env-mode=loose
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BUILDER_PUBLISH_S3_ENDPOINT: ${{ vars.BUILDER_PUBLISH_S3_ENDPOINT }}
          MAIN_VITE_GOOGLE_CLIENT_ID: ${{ vars.MAIN_VITE_GOOGLE_CLIENT_ID }}
          MAIN_VITE_GOOGLE_CLIENT_SECRET: ${{ secrets.MAIN_VITE_GOOGLE_CLIENT_SECRET }}
          VITE_APP_PROTOCOL: ${{ vars.VITE_APP_PROTOCOL }}
          VITE_POSTHOG_API_HOST: ${{ vars.VITE_POSTHOG_API_HOST }}
          VITE_POSTHOG_API_KEY: ${{ vars.VITE_POSTHOG_API_KEY }}
          VITE_QUESTS_API_BASE_URL: ${{ vars.VITE_QUESTS_API_BASE_URL }}

      - if: matrix.os == 'ubuntu-latest'
        name: upload-linux-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-appimage
          path: apps/studio/dist/*.AppImage
          retention-days: 30

      - if: matrix.os == 'ubuntu-latest'
        name: upload-linux-deb
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb
          path: apps/studio/dist/*.deb
          retention-days: 30

      - if: matrix.os == 'ubuntu-latest'
        name: upload-linux-snap
        uses: actions/upload-artifact@v4
        with:
          name: linux-snap
          path: apps/studio/dist/*.snap
          retention-days: 30

      - if: matrix.os == 'ubuntu-latest'
        name: upload-linux-tar-gz
        uses: actions/upload-artifact@v4
        with:
          name: linux-tar-gz
          path: apps/studio/dist/*.tar.gz
          retention-days: 30

      - if: matrix.os == 'ubuntu-latest'
        name: upload-linux-yml
        uses: actions/upload-artifact@v4
        with:
          name: latest-linux.yml
          path: apps/studio/dist/latest-linux.yml
          retention-days: 30

      - if: matrix.os == 'ubuntu-latest'
        name: upload-linux-blockmap
        uses: actions/upload-artifact@v4
        with:
          name: linux-blockmap
          path: apps/studio/dist/*.blockmap
          retention-days: 30

      - if: matrix.os == 'macos-latest'
        name: setup-signing
        run: |
          mkdir -p ~/.private_keys
          echo '${{ secrets.APPLE_API_KEY_DATA }}' > ~/.private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8

      - if: matrix.os == 'macos-latest'
        name: build-mac
        run: pnpm turbo build:mac --env-mode=loose
        env:
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_KEY: ~/.private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8
          APPLE_NOTARIZATION_ENABLED: ${{ vars.APPLE_NOTARIZATION_ENABLED }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BUILDER_PUBLISH_S3_ENDPOINT: ${{ vars.BUILDER_PUBLISH_S3_ENDPOINT }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          MAIN_VITE_GOOGLE_CLIENT_ID: ${{ vars.MAIN_VITE_GOOGLE_CLIENT_ID }}
          MAIN_VITE_GOOGLE_CLIENT_SECRET: ${{ secrets.MAIN_VITE_GOOGLE_CLIENT_SECRET }}
          VITE_APP_PROTOCOL: ${{ vars.VITE_APP_PROTOCOL }}
          VITE_POSTHOG_API_HOST: ${{ vars.VITE_POSTHOG_API_HOST }}
          VITE_POSTHOG_API_KEY: ${{ vars.VITE_POSTHOG_API_KEY }}
          VITE_QUESTS_API_BASE_URL: ${{ vars.VITE_QUESTS_API_BASE_URL }}

      - if: matrix.os == 'macos-latest'
        name: cleanup-signing
        run: |
          rm ~/.private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8

      - if: matrix.os == 'macos-latest'
        name: upload-macos-dmg
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: apps/studio/dist/*.dmg
          retention-days: 30

      - if: matrix.os == 'macos-latest'
        name: upload-macos-zip
        uses: actions/upload-artifact@v4
        with:
          name: macos-zip
          path: apps/studio/dist/*.zip
          retention-days: 30

      - if: matrix.os == 'macos-latest'
        name: upload-macos-yml
        uses: actions/upload-artifact@v4
        with:
          name: macos-yml
          path: apps/studio/dist/*.yml
          retention-days: 30

      - if: matrix.os == 'macos-latest'
        name: upload-macos-blockmap
        uses: actions/upload-artifact@v4
        with:
          name: macos-blockmap
          path: apps/studio/dist/*.blockmap
          retention-days: 30

      - if: matrix.os == 'windows-latest'
        name: build-win
        run: pnpm turbo build:windows --env-mode=loose
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BUILDER_PUBLISH_S3_ENDPOINT: ${{ vars.BUILDER_PUBLISH_S3_ENDPOINT }}
          MAIN_VITE_GOOGLE_CLIENT_ID: ${{ vars.MAIN_VITE_GOOGLE_CLIENT_ID }}
          MAIN_VITE_GOOGLE_CLIENT_SECRET: ${{ secrets.MAIN_VITE_GOOGLE_CLIENT_SECRET }}
          VITE_APP_PROTOCOL: ${{ vars.VITE_APP_PROTOCOL }}
          VITE_POSTHOG_API_HOST: ${{ vars.VITE_POSTHOG_API_HOST }}
          VITE_POSTHOG_API_KEY: ${{ vars.VITE_POSTHOG_API_KEY }}
          VITE_QUESTS_API_BASE_URL: ${{ vars.VITE_QUESTS_API_BASE_URL }}

      - if: matrix.os == 'windows-latest'
        name: upload-windows-exe
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: apps/studio/dist/*.exe
          retention-days: 30

      - if: matrix.os == 'windows-latest'
        name: upload-windows-zip
        uses: actions/upload-artifact@v4
        with:
          name: windows-zip
          path: apps/studio/dist/*.zip
          retention-days: 30

      - if: matrix.os == 'windows-latest'
        name: upload-windows-yml
        uses: actions/upload-artifact@v4
        with:
          name: windows-yml
          path: apps/studio/dist/*.yml
          retention-days: 30

      - if: matrix.os == 'windows-latest'
        name: upload-windows-blockmap
        uses: actions/upload-artifact@v4
        with:
          name: windows-blockmap
          path: apps/studio/dist/*.blockmap
          retention-days: 30

      - name: release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            apps/studio/dist/*.exe
            apps/studio/dist/*.zip
            apps/studio/dist/*.dmg
            apps/studio/dist/*.AppImage
            apps/studio/dist/*.snap
            apps/studio/dist/*.deb
            apps/studio/dist/*.rpm
            apps/studio/dist/*.tar.gz
            apps/studio/dist/*.yml
            apps/studio/dist/*.blockmap
